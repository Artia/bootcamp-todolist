continue
response.request.flash[:notice]
response.request.flash
response.request
response
continue
response.request.flash[:notice]
response.request.flash
response.request
response
continue
@task.save
@task
continue
@project.tasks
continue
project.tasks
project
Task.create(title: 'Teste automatizado', date_start: Time.now, date_end: Time.now + 2.days, project_id: project.id)
project.tasks
project.id
continue
@project.tasks
@project
continue
@project.tasks
continue
@project.id
@project
task
project.tasks
project
response.status
response
continue
@project.tasks
@project
continue
project.tasks
project
project.save
project.tasks << Task.new(title: 'Tarefa', date_start: Time.now, date_end: Time.now + 2.days)
project = Project.new(title: 'teste')
@project.errors
@project.save
@project.tasks << Task.new(title: 'Tarefa', date_start: Time.now, date_end: Time.now + 2.days)
@project.save(validate: false)
@project.save
@project.tasks << Task.new
@project.tasks
@project = Project.new(title: 'Novo Projeto')
n
continue
n
Task.create(title: 'Tarefa', date_start: Time.now, date_end: Time.now + 2.days, project_id: @project.id)
project.save
project = Project.new(title: 'Novo Projeto', completed_percent: 15)
Project.new(title: 'Novo Projeto', completed_percent: 15)
project.save
project.completed_percent = 10
project.title = "teste"
project = Project.new
Project.new
continue
n
task_id.blank?
task_id
task
continue
task
n
task_id
continue
task
n
task_id
continue
task.state
n
continue
task.save
task.state
task
n
task.state
task
n
continue
task.state
task
n
continue
task.state
task
n
continue
@task.reload.state
@task.reload
@task.state
@task
n
task.save
task.state
n
task.state
n
task
n
task_id
continue
!nil
@task.state
@project
@task
continue
info_tasks.task_concluded
info_tasks.total_tasks
continue
info_tasks.total_tasks
info_tasks.task_concluded
info_tasks
continue
(info_tasks.task_concluded.to_f / info_tasks.total_tasks.to_f) * 100
info_tasks.total_tasks
info_tasks.task_concluded
info_tasks
continue
self.state
continue
self.state
self
continue
task
continue
@task.errors.added?(:date_start, 'cannot be greater than the end date')
@task.errors.added?(:title, :blank)
@task.errors
@task
@task.valid?
@task
